%!TEX encoding = UTF-8 Unicode

%-------------------------------------------------------------------------------
% 为Awesome-CV引入功能修改以及额外定义部分
% Author: William Yao
% Create: 2022-04-29
%-------------------------------------------------------------------------------

%-------------------------------------------------------------------------------
% 定义开始
%-------------------------------------------------------------------------------
\ProvidesPackage{dukang}


%-------------------------------------------------------------------------------
% 基础依赖部分
%
% 所有功能包的引入、依赖和设定都放在这个部分
%-------------------------------------------------------------------------------
% ctex
% 加载中文环境支持
%
% 选项：
%   fontset
%     定义中文环境使用的字体，可选项为：
%       adobe, fandol, founder, mac, macnew,
%       macold, ubuntu, windows, none, <自定义>
%       其中如果指定自定义名称的配置，需配合ctex-fontset-<自定义>.def使用
% 说明：
%   本项目默认使用自定义字体文件进行编译，更多细节可查看ctex-fontset-custom.def
%   所用字体为：
%     Adobe 黑体 Std, Adobe 楷体 Std, Adobe 仿宋 Std, Adobe 宋体 Std,
%     幼圆, 隶书, 方正小标宋, YaHei Consolas Hybrid, Inconsolata
%   上述字体如果系统未安装，请自行下载安装，或根据需要自行变更
\RequirePackage[scheme=chinese, fontset=custom, hyperref, UTF8]{ctex}
\ctexset{
  today=big,
  space=false,
}
%-------------------------------------------------------------------------------
% minted
% 使用minted实现代码高亮
%
% 选项：
%   cache=true
%     缓存目录
%     如果开启缓存，有可能会出现undefined control sequence错误
%     解决办法，要么在重新编译前，删除_minted-*缓存目录，要么关闭缓存
%     自动删除已添加到Makefile的make clean以及make cleanall命令中，无需手动删除
\RequirePackage[cache=false, outputdir=src]{minted}
%-------------------------------------------------------------------------------
% tcolorbox
% 引入tcolorbox的库
% 由于Awesome-CV宏包已经引入了tcolorbox，因此这里如果想要启用minted库的话，
% 不能使用\usepackage命令，可以使用tcolorbox内置的\tcbuselibrary命令
% 或者\PassOptionsToPackage{option1,option2}{package}
% 调用对应的库
\tcbuselibrary{skins, listingsutf8, xparse, breakable, minted}
%-------------------------------------------------------------------------------
% tcolorbox的全局设定
\tcbset{
  % \baselineskip是根据默认字号对应的默认行距
  % 由于ctex的中文行距是1.56（1.3）倍字体高度，所以英文单倍行距需要0.641\baselineskip
  % \singlespacing是默认单倍行距的命令
  % code={...}是tcolorbox的选项之一，可以指定要执行的命令
  % code的作用域是tcolorbox的整体，包括标题行、upper和lower
  % 所以经过测试之后，效果最好的是使用before upper和\fontsize来直接指定字号和行距
  % 否则标题行也会被影响
  % 指定字号和行距
  before upper=\fontsize{10pt}{10pt}\selectfont,
  % 指定字体
  fontupper=\sffamily,
}
%-------------------------------------------------------------------------------
% minted的全局样式设定
% 以下设定即可以放在导言区，也可以在文档区随用随定义
%
% 指定所有语言的全局高亮样式
%   \usemintedstyle{minted_style}
%
% 单独指定语言的全局高亮样式
%   \usemintedstyle[lang]{minted_style}
%
% 单独指定语言的行内代码样式
%   \newmintinline{lang}{option}
%   其中option选项可为：
%     showspaces 将空格显式的打印出来
%
% 说明：
%   minted_style
%     代码高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%-------------------------------------------------------------------------------
% tabular
% 用于支撑tcblisting环境
\RequirePackage{tabularx}
\newcolumntype{\CeX}{>{\centering\let\newline\\\arraybackslash}X}%
\newcommand{\TwoSymbolsAndText}[3]{%
  \begin{tabularx}{\textwidth}{c\CeX c}%
    #1 & #2 & #3
  \end{tabularx}%
}
%-------------------------------------------------------------------------------
% dirtree
% 用于在文档中以漂亮的方式显示文件目录树
\RequirePackage{dirtree}
% 设置字体
\renewcommand*\DTstylecomment{\sffamily}
\renewcommand*\DTstyle{\sffamily}
%-------------------------------------------------------------------------------
% lcg
% 该包会生成随机数，主要用于文档各部分书签标签的随机生成
% 用法：
%   \usepackage[first=-100, last=100]{lcg}
%   如果不指定边界，则默认会生成[1, 2^31-1]区间内的随机数
% 这里定义了\random命令，可以简化\arabic{}的调用
% 否则，\rand生成的是数值类型，只有调用\arabic才能转换成字符串输出到文档
%
% 需要手动创建dukangRandom计数器，否则会存储不成功
\newcounter{dukangRandom}
% 指定存储计数器为dukangRandom，lcg宏包的默认计数器为rand
\RequirePackage[counter=dukangRandom]{lcg}
% 创建\random命令，方便直接将随机数输出至文档字符串
\newcommand{\random}{\rand\arabic{dukangRandom}}
%-------------------------------------------------------------------------------
% 脚注
\usepackage[perpage,symbol*]{footmisc}
% 修改脚注数字为圆圈数字
\usepackage{pifont}
\renewcommand\thefootnote{\ding{\numexpr171+\value{footnote}}}
% 修改脚注字体
\renewcommand{\footnotesize}{\fontsize{10pt}{\baselineskip}\sffamily\selectfont}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% Awesome-CV 定义修改部分
%
% 包含所有对Awesome-CV<.cls>非侵入的修改内容
%-------------------------------------------------------------------------------
% 自定义开关
%-------------------------------------------------------------------------------
% dukangParIndent
% 添加某些正文部分的首行缩进开关
\newbool{dukangParIndent}
\setbool{dukangParIndent}{true}
% 是否为PDF书签添加标题前的标号
\newbool{dukangBookmarkLeadingNumber}
\setbool{dukangBookmarkLeadingNumber}{true}
%-------------------------------------------------------------------------------
% 自定义配置
%-------------------------------------------------------------------------------
% 定义首页主标题的书签
%-------------------------------------------------------------------------------
\bookmark[named=FirstPage, level=0, view=FitH]{\@firstname\@lastname}
%-------------------------------------------------------------------------------
% 以下计数器用于支持PDF书签标题开头的编号
%-------------------------------------------------------------------------------
\ifbool{dukangBookmarkLeadingNumber}{%
  \newcounter{dukangCounterSection}
  \setcounter{dukangCounterSection}{0}
  \newcounter{dukangCounterSubSection}
  \setcounter{dukangCounterSubSection}{0}
}{}
%-------------------------------------------------------------------------------
% 利用随机数生成器指定书签标签
%-------------------------------------------------------------------------------
% 用法：
%   \dukangBookmarkSection<[level]>{section_title}
%
% 说明：
%   level
%     可选，表示书签列表的层级，默认为1，（因为文档主标题为0）
%   section_title
%     section的标题，同时也是书签的文字内容
%
% 由于引入了中文环境，并且Awesome-CV的原始结构为CV-Resume-Cover分别独立呈现，
% 在把所有部分合并成一个文件之后，需要做一些适应性调整，其中就包括原始文件不具备的
% PDF书签设定部分。
% 原始英文环境已经预备了hyperref和bookmark宏包，但是由于引入了ctex中文环境，
% 直接调用bookmark生成书签会存在若干问题，各种尝试ctex[hyperref, UTF8]和
% hyperref[unicode, CJKbookmarks]均不行，看来和宏包本身的环境有关。
%-------------------------------------------------------------------------------
\newcommand*{\dukangBookmarkSection}[2][1]{%
  % 使用随机数生成器直接对应标签和书签
  % 先调用一次lcg宏包的\rand命令，将生成的随机数保存在定义时的计数器中
  \rand
  \ifbool{dukangBookmarkLeadingNumber}{%
    % 如果指定需要编号，则调用自定义计数器来进行手动编号
    % 对应的计数器在命令外定义
    \stepcounter{dukangCounterSection}
    % 使用\arabic调用计数器，否则读出来的是数值，不是文档字符串输出
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangRandom}}{\lettersectionstyle{#2}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangRandom}, level=#1, view=FitH]{\arabic{dukangCounterSection}~~~~#2}%
  }{%
    % 如果不用编号
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangRandom}}{\lettersectionstyle{#2}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangRandom}, level=1, view=FitH]{#2}
  }
}
%-------------------------------------------------------------------------------
\newcommand*{\dukangBookmarkSubSection}[2][2]{%
  % 使用随机数生成器直接对应标签和书签
  % 先调用一次lcg宏包的\rand命令，将生成的随机数保存在定义时的计数器中
  \rand
  \ifbool{dukangBookmarkLeadingNumber}{%
    % 如果指定需要编号，则调用自定义计数器来进行手动编号
    % 对应的计数器在命令外定义
    \stepcounter{dukangCounterSubSection}
    % 使用\arabic调用计数器，否则读出来的是数值，不是文档字符串输出
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangRandom}}{\lettersectionstyle{#2}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangRandom}, level=#1, view=FitH]{\arabic{dukangCounterSubSection}~~~~#2}%
  }{%
    % 如果不用编号
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangRandom}}{\lettersectionstyle{#2}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangRandom}, level=1, view=FitH]{#2}
  }
}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 重定义Awesome-CV的部分命令
%-------------------------------------------------------------------------------
% Awesome section color
%
% 重新定义section标题的高亮显示部分
% 原始定义为#1#2#3，即为将前三个字符进行高亮处理
% 这里修改为#1#2#3#4，即前四个字符，更符合中文习惯
% 可以为#1，表示有第一个字符高亮，而不是整个字符串
%
% 注意：
%   由于原版默认为前三个英文字母，对于后续空格没有进行处理，所以如果在高亮范围内有空格，
%   需要显式声明该空格，比如使用~符号。
%-------------------------------------------------------------------------------
\def\@sectioncolor#1#2#3#4{%
  \ifbool{acvSectionColorHighlight}{{\color{awesome}#1#2#3#4}}{#1#2#3#4}%
}
%-------------------------------------------------------------------------------
% lettersection
%-------------------------------------------------------------------------------
\renewcommand{\lettersection}[1]{%
  % 重置首行缩进为0，适应单独设置\noindent的情况
  \setlength{\parindent}{0em}
  \par\addvspace{2.5ex}
  \phantomsection{}
  \dukangBookmarkSection{#1}
  \color{sectiondivider}\vhrulefill{0.9pt}
  \par\nobreak\addvspace{0.4ex}
  \ifbool{dukangParIndent}{% if
    % 设定首行缩进为2em
    \setlength{\parindent}{2em}
  }{% else
    % 用于解决cvparagraph紧接着cvsection
    % 如果中间没有空行，会没有段落标记，造成编译失败，读不到\end{document}
    \setlength{\parindent}{0em}
  }
  \lettertextstyle
}
%-------------------------------------------------------------------------------
% cvparagraph
%-------------------------------------------------------------------------------
% 重新定义paragraphstyle，不指定字体大小，使用默认设置
\renewcommand*{\paragraphstyle}{\bodyfont\upshape\color{text}}
% 重新定义cvparagraph环境，调整\par的位置，解决与分割线同行的问题
\renewenvironment{cvparagraph}{%
  \vspace{\acvSectionContentTopSkip}
  \vspace{-3mm}
  % 增加\par，解决cvparagraph紧接着cvsection，内容会出现在分割线同一行的情况
  \par\paragraphstyle
}{} % 这里的结尾{}不能省略，否则编译报错
%-------------------------------------------------------------------------------
% cvsection
%-------------------------------------------------------------------------------
\renewcommand{\cvsection}[1]{%
  \vspace{\acvSectionTopSkip}
  \setlength{\parskip}{0em}
  % 重置首行缩进为0，适应单独设置\noindent的情况
  \setlength{\parindent}{0em}
  \phantomsection{}
  \dukangBookmarkSection{#1}
  \color{sectiondivider}\vhrulefill{0.9pt}
  % \par\nobreak\addvspace{0.4ex}
  \ifbool{dukangParIndent}{% if
    % 设定首行缩进为2em
    \setlength{\parindent}{2em}
  }{% else
    \setlength{\parindent}{0em}%
  }
  % 用于解决cvparagraph紧接着cvsection
  % 如果中间没有空行，会没有段落标记，造成编译失败，读不到\end{document}
  \vspace{\acvSectionContentTopSkip}
  \par\paragraphstyle
}
%-------------------------------------------------------------------------------
% cvsubsection
%-------------------------------------------------------------------------------
\renewcommand{\cvsubsection}[1]{%
  % \vspace{0.641\baselineskip}
  \vspace{\baselineskip}
  \setlength{\parskip}{0em}
  \setlength{\parindent}{0em}
  \dukangBookmarkSubSection{#1}
  \ifbool{dukangParIndent}{% if
    % 设定首行缩进为2em
    \setlength{\parindent}{2em}
  }{% else
    \setlength{\parindent}{0em}%
  }
  \phantomsection
  % 用于解决cvparagraph紧接着cvsection
  % 如果中间没有空行，会没有段落标记，造成编译失败，读不到\end{document}
  \par
}
% -------------------------------------------------------------------------------
% cvskills
%-------------------------------------------------------------------------------
\renewcommand*{\skilltypestyle}[1]{{\fontsize{10pt}{1em}\bodyfont\bfseries\color{darktext} #1}}
\renewcommand*{\skillsetstyle}[1]{{\fontsize{10pt}{1em}\bodyfont\color{text} #1}}
%-------------------------------------------------------------------------------
% cventries
%-------------------------------------------------------------------------------
% 重新定义字体颜色和风格
% 1.56em为中文环境的标准行距，或者设置为1.3em也较为合适
\renewcommand*{\descriptionstyle}[1]{{\fontsize{10pt}{1.56em}\bodyfontlight\color{text} #1}}
% 重新定义cventry的表示顺序，更符合使用习惯
\renewcommand*{\cventry}[5]{%
  \vspace{-2.0mm}
  \setlength\tabcolsep{0pt}
  \setlength{\extrarowheight}{0pt}
  \begin{tabular*}{\textwidth}{@{\extracolsep{\fill}} L{\textwidth - 4.5cm} R{4.5cm}}
    \ifempty{#3#4}
      {\entrytitlestyle{#1} & \entrylocationstyle{#2} \\}
      {\entrytitlestyle{#1} & \entrylocationstyle{#2} \\
      \entrypositionstyle{#3} & \entrydatestyle{#4} \\}
    \multicolumn{2}{L{\textwidth}}{\descriptionstyle{#5}}
  \end{tabular*}%
}
% -------------------------------------------------------------------------------
% cvhonors & cvhonor
% -------------------------------------------------------------------------------
% 使用xparse重定义cvhonor环境，支持可选默认值参数用来指定3个部分的对齐方式
\DeclareDocumentEnvironment{cvhonors}{O{L} O{L} O{R}}
{%
  \vspace{\acvSectionContentTopSkip}
  \vspace{-2mm}
  % 使用spacing包控制单元格内的line之间的距离
  \begin{spacing}{1}
    \begin{center}
      \setlength\tabcolsep{0pt}
      \setlength{\extrarowheight}{0pt}
      % 控制表格的row之间的距离
      % \renewcommand{\arraystretch}{1.5}
      \begin{tabular*}{\textwidth}{@{\extracolsep{\fill}} #1{3cm} #2{\textwidth - 6.0cm} #3{3cm}}
}{%
      \end{tabular*}
    \end{center}
  \end{spacing}
}
% 重新定义3个风格
\renewcommand*{\honorpositionstyle}[1]{{\fontsize{10pt}{1em}\bodyfont\bfseries\color{text} #1}}
\renewcommand*{\honortitlestyle}[1]{{\fontsize{10pt}{1em}\bodyfont\color{text} #1}}
\renewcommand*{\honorlocationstyle}[1]{{\fontsize{10pt}{1em}\bodyfontlight\slshape\color{awesome} #1}}
% 重新定义cvhonor三个部分的显示顺序
\renewcommand*{\cvhonor}[3]{%
  \honorpositionstyle{#1} & \honortitlestyle{#2} & \honorlocationstyle{#3} \\
}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 自定义命令
%
% 所有自定义命令的具体实现都放在该部分
% 自定义环境统一以dk开头，用于区分其他宏包的自定义命令
%-------------------------------------------------------------------------------
% dk
% 定义一个简短的命令用于显示完整名称
\newcommand{\dk}{\hyperref{https://williamyao.com}{}{}{\LaTeX{}~Dukang}}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 自定义环境
%
% 所有自定义环境的具体实现都放在该部分
% 自定义环境统一以dk开头，用于区分其他宏包的自定义环境
%-------------------------------------------------------------------------------
% dkbutton
% inline风格，既可以指定主色调，也可以配色自适应的小盒子
%
% 用法：
%   \dkbutton<[color]>{text}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   text
%     需要显示的内容
%
% 已知Bug：
%   不要在同一个中文段落里用太多或者单个太长，否则影响中文的断行和标点压缩
%
% 例如：
%   \dkbutton[Hello Dukang]
%   \dkbutton[red]{Hello Dukang}
%-------------------------------------------------------------------------------
\newtcbox{\dkbutton}[1][awesome]{%
  on line,
  arc=0pt,
  outer arc=0pt,
  colframe=awesome,
  colback=awesome!5,
  boxsep=0pt,
  left=1pt,
  right=1pt,
  top=2pt,
  bottom=2pt,
  boxrule=0pt,
  toprule=1pt,
  bottomrule=1pt,
}
%-------------------------------------------------------------------------------
% dkbuttonr
% inline风格，圆角描边，既可以指定主色调，也可以配色自适应的小盒子
%
% 用法：
%   \dkbuttonr<[color]>{text}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   text
%     需要显示的内容
%
% 已知Bug：
%   不要在同一个中文段落里用太多或者单个太长，否则影响中文的断行和标点压缩
%
% 例如：
%   \dkbuttonr[Hello Dukang]
%   \dkbuttonr[red]{Hello Dukang}
%-------------------------------------------------------------------------------
\newtcbox{\dkbuttonr}[1][awesome]{%
  on line,
  arc=7pt,
  colframe=awesome,
  colback=awesome!5,
  before upper={\rule[-3pt]{0pt}{10pt}},
  boxrule=1pt,
  boxsep=0pt,
  left=6pt,
  right=6pt,
  top=3pt,
  bottom=1pt,
}
%-------------------------------------------------------------------------------
% dkresource
% 引入外部pdf或图片的命令
%
% 用法：
%   \dkresource<[htbp!]>{file}{width_factor}{<caption>}
%
% 说明：
%   <htbp!>
%     控制图像浮动方式的可选参数，默认为htbp
%     h: 当前位置（代码所处的上下文）
%     t: Top（页面顶部）
%     b: Bottom（页面底部）
%     p: Page（单独成页）
%     !: 在决定位置时忽视限制
%     排版位置的选取与参数里符号的顺序无关，总是以h-t-b-p的优先级顺序决定浮动体位置
%     限制包括：
%       浮动体个数：
%         除单独成页外，默认每页不超过3个浮动体，其中顶部不超过2个，底部不超过1个
%       浮动体空间占页面的百分比：
%         默认顶部不超过70%，底部不超过30%
%   file
%     需要引入的文件，相对地址的起点为src根目录
%   width_factor
%     相对于整个页宽的占比，取值为0-1
%   caption
%     图形下方的说明，可为空，但不能省略
%
% 例如：
%   带说明，不可单独成页：
%     \dkresource[htb]{resource/r-1}{0.9}{这里是图形说明}
%   不带说明，使用默认参数（htbp），可单独成页：
%     \dkresource{resource/r-2}{1.0}{}
%-------------------------------------------------------------------------------
\newcommand{\dkresource}[4][htbp]{%
  \begin{figure}[#1]
    \centering
    \includegraphics[width=#3\textwidth]{#2}
    \ifthenelse{\isempty{#4}}{}{\caption{#4}}
    % \label{#5}
  \end{figure}
}
%-------------------------------------------------------------------------------
% dkcodeh
% 带有标题特效的代码高亮块，主色调既可以手动指定，也可以基于Awesome-CV的awesome颜色自适应
% 名称中h的意思是heading
%
% 用法：
%   \begin{dkcodeh}<[color]>{lang}{minted_style}{title}
%     ...
%   \end{dkcodeh}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%
% 例如：
%   \begin{dkcodeh}{python3}{tango}{这里是标题}
%     import os
%     pass
%   \end{dkcodeh}
%-------------------------------------------------------------------------------
\newtcblisting{dkcodeh}[4][awesome]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#2,
  minted style=#3,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm,
    tabsize=2,
  },
  listing only,
  left=6mm,
  enhanced,
  title={#4},
  colframe=#1,
  colback=#1!5,
  colbacktitle=#1!85,
  % fonttitle=\bfseries,
  coltitle=white,
  attach boxed title to top center={
    yshift=-0.25mm-\tcboxedtitleheight/2,
    yshifttext=2mm-\tcboxedtitleheight/2
  },
  boxed title style={
    enhanced,boxrule=0.5mm,
    frame code={
      \path[tcb fill frame]
      ([xshift=-4mm]frame.west)
      -- (frame.north west)
      -- (frame.north east)
      -- ([xshift=4mm]frame.east)
      -- (frame.south east)
      -- (frame.south west)
      -- cycle;
    },
    interior code={
      \path[tcb fill interior]
      ([xshift=-2mm]interior.west)
      -- (interior.north west)
      -- (interior.north east)
      -- ([xshift=2mm]interior.east)
      -- (interior.south east)
      -- (interior.south west)
      -- cycle;
    }
  },
  overlay={
    \begin{tcbclipinterior}
      \fill[awesome!20]
      (frame.south west)
      rectangle
      ([xshift=5mm]frame.north west);
    \end{tcbclipinterior}
  }
}
%-------------------------------------------------------------------------------
% dkcodefileh
% 带有标题特效的代码高亮块，主色调既可以手动指定，也可以基于Awesome-CV的awesome颜色自适应
% 该命令从指定文件中读取内容进行高亮显示
%
% 用法：
%   \dkcodefileh<[color]>{lang}{minted_style}{title}{file}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   file
%     代码块内容的来源文件，必须为内容可读的文本文件
%
% 例如：
%   \dkcodefileh{python3}{tango}{代码示例}{resource/code.py}
%-------------------------------------------------------------------------------
\newtcbinputlisting{dkcodefileh}[5][awesome]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#2,
  minted style=#3,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm,
    tabsize=2,
  },
  listing only,
  left=6mm,
  enhanced,
  title={#4},
  colframe=#1,
  colback=#1!5,
  colbacktitle=#1!85,
  % fonttitle=\bfseries,
  coltitle=white,
  listing file={#5},
  attach boxed title to top center={
    yshift=-0.25mm-\tcboxedtitleheight/2,
    yshifttext=2mm-\tcboxedtitleheight/2
  },
  boxed title style={
    enhanced,boxrule=0.5mm,
    frame code={
      \path[tcb fill frame]
      ([xshift=-4mm]frame.west)
      -- (frame.north west)
      -- (frame.north east)
      -- ([xshift=4mm]frame.east)
      -- (frame.south east)
      -- (frame.south west)
      -- cycle;
    },
    interior code={
      \path[tcb fill interior]
      ([xshift=-2mm]interior.west)
      -- (interior.north west)
      -- (interior.north east)
      -- ([xshift=2mm]interior.east)
      -- (interior.south east)
      -- (interior.south west)
      -- cycle;
    }
  },
  overlay={
    \begin{tcbclipinterior}
      \fill[awesome!20]
      (frame.south west)
      rectangle
      ([xshift=5mm]frame.north west);
    \end{tcbclipinterior}
  }
}
%-------------------------------------------------------------------------------
% dkcode
% 代码高亮块，主色调既可以手动指定，也可以基于Awesome-CV的awesome颜色自适应
%
% 用法：
%   \begin{dkcode}<[color]>{lang}{minted_style}{title}
%     ...
%   \end{dkcode}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%
% 例如：
%   \begin{dkcode}{python3}{tango}{代码示例}
%     ...
%   \end{dkcode}
%-------------------------------------------------------------------------------
\newtcblisting{dkcode}[4][awesome]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#2,
  minted style=#3,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm,
    tabsize=2,
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#4}{\faCode},
  colframe=#1,
  colback=#1!5,
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcodefile
% 代码高亮块，主色调既可以手动指定，也可以基于Awesome-CV的awesome颜色自适应
% 该命令从指定文件中读取内容进行高亮显示
%
% 用法：
%   \dkcodefile<[color]>{lang}{minted_style}{title}{file}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   file
%     代码块内容的来源文件，必须为内容可读的文本文件
%
% 例如：
%   \dkcodefile{python3}{tango}{代码示例}{resource/code.py}
%-------------------------------------------------------------------------------
\newtcbinputlisting{dkcodefile}[5][awesome]{
  before skip=18bp,
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#2,
  minted style=#3,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm,
    tabsize=2,
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#4}{\faCode},
  colframe=#1,
  colback=#1!5,
  listing file={#5},
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcomment
% 备注框，主色调既可以手动指定，也可以基于Awesome-CV的awesome颜色自适应
%
% 用法：
%   \begin{dkcomment}<[color]>{title}{\fontawesome_name}
%     ...
%   \end{dkcomment}
%
% 说明：
%   color
%     可选，指定主色调或省略进行自适应
%   title
%     代码块标题栏文字
%   fontawesome_name
%     FontAwesome字体的代码或名称
%
% 例如：
%   \begin{dkcomment}{特别说明}{\faCheck}
%     ...
%   \end{dkcomment}
%-------------------------------------------------------------------------------
\newtcolorbox{dkcomment}[3][awesome]{
  before skip=18bp,
  drop shadow,
  size=title,
  top=3mm,
  bottom=3mm,
  left=6mm,
  right=6mm,
  arc=1.5mm,
  breakable,
  enhanced jigsaw,
  colframe=#1,
  coltitle=white,
  boxrule=0.5mm,
  colback=#1!5,
  coltext=text,
  title=\TwoSymbolsAndText{#3}{#2}{#3}
}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 定义结束
%-------------------------------------------------------------------------------
