%!TEX encoding = UTF-8 Unicode

%-------------------------------------------------------------------------------
% 为Awesome-CV引入功能修改以及额外定义部分
% Author: William Yao
% Create: 2022-04-29
%-------------------------------------------------------------------------------

%-------------------------------------------------------------------------------
% 定义开始
%-------------------------------------------------------------------------------
\ProvidesPackage{dukang}


%-------------------------------------------------------------------------------
% 基础依赖部分
%
% 所有功能包的引入、依赖和设定都放在这个部分
%-------------------------------------------------------------------------------
% ctex
% 加载中文环境支持
%
% 选项：
%   fontset
%     定义中文环境使用的字体，可选项为：
%       adobe, fandol, founder, mac, macnew,
%       macold, ubuntu, windows, none, <自定义>
%       其中如果指定自定义名称的配置，需配合ctex-fontset-<自定义>.def使用
% 说明：
%   本项目默认使用自定义字体文件进行编译，更多细节可查看ctex-fontset-custom.def
%   所用字体为：
%     Adobe 黑体 Std, Adobe 楷体 Std, Adobe 仿宋 Std, Adobe 宋体 Std,
%     幼圆, 隶书, 方正小标宋, YaHei Consolas Hybrid, Inconsolata
%   上述字体如果系统未安装，请自行下载安装，或根据需要自行变更
\RequirePackage[fontset=custom, hyperref, UTF8]{ctex}
\ctexset{
  today=big,
  space=false,
}
%-------------------------------------------------------------------------------
% minted
% 使用minted实现代码高亮
%
% 选项：
%   cache=true
%     缓存目录
%     如果开启缓存，有可能会出现undefined control sequence错误
%     解决办法，要么在重新编译前，删除_minted-*缓存目录，要么关闭缓存
%     自动删除已添加到Makefile的make clean以及make cleanall命令中，无需手动删除
\RequirePackage[cache=false, outputdir=src]{minted}
%-------------------------------------------------------------------------------
% tcolorbox
% 引入tcolorbox的库
% 由于Awesome-CV宏包已经引入了tcolorbox，因此这里如果想要启用minted库的话，
% 不能使用\usepackage命令，可以使用tcolorbox内置的\tcbuselibrary命令
% 或者\PassOptionsToPackage{option1,option2}{package}
% 调用对应的库
\tcbuselibrary{skins, listingsutf8, xparse, breakable, minted}
%-------------------------------------------------------------------------------
% minted的全局样式设定
% 以下设定即可以放在导言区，也可以在文档区随用随定义
%
% 指定所有语言的全局高亮样式
%   \usemintedstyle{minted_style}
%
% 单独指定语言的全局高亮样式
%   \usemintedstyle[lang]{minted_style}
%
% 单独指定语言的行内代码样式
%   \newmintinline{lang}{option}
%   其中option选项可为：
%     showspaces 将空格显式的打印出来
%
% 说明：
%   minted_style
%     代码高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%-------------------------------------------------------------------------------
% tabular
% 用于支撑tcblisting环境
\RequirePackage{tabularx}
\newcolumntype{\CeX}{>{\centering\let\newline\\\arraybackslash}X}%
\newcommand{\TwoSymbolsAndText}[3]{%
  \begin{tabularx}{\textwidth}{c\CeX c}%
    #1 & #2 & #3
  \end{tabularx}%
}
%-------------------------------------------------------------------------------
% dirtree
% 用于在文档中以漂亮的方式显示文件目录树
\RequirePackage{dirtree}
%-------------------------------------------------------------------------------
% lcg
% 该包会生成随机数，主要用于文档各部分书签标签的随机生成
% 用法：
%   \usepackage[first=-100, last=100]{lcg}
%   如果不指定边界，则默认会生成[1, 2^31-1]区间内的随机数
% 这里定义了\random命令，可以简化\arabic{}的调用
% 否则，\rand生成的是数值类型，只有调用\arabic才能转换成字符串输出到文档
%
% 需要手动创建dukangRandom计数器，否则会存储不成功
\newcounter{dukangRandom}
% 指定存储计数器为dukangRandom，lcg宏包的默认计数器为rand
\RequirePackage[counter=dukangRandom]{lcg}
% 创建\random命令，方便直接将随机数输出至文档字符串
\newcommand{\random}{\rand\arabic{dukangRandom}}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% Awesome-CV 定义修改部分
%
% 包含所有对Awesome-CV<.cls>非侵入的修改内容
%-------------------------------------------------------------------------------
% 自定义开关
%-------------------------------------------------------------------------------
% dukangParIndent
% 添加某些正文部分的首行缩进开关
\newbool{dukangParIndent}
\setbool{dukangParIndent}{true}
% 是否为PDF书签添加标题前的标号
\newbool{dukangBookmarkLeadingNumber}
\setbool{dukangBookmarkLeadingNumber}{true}
%-------------------------------------------------------------------------------
% 自定义配置
%-------------------------------------------------------------------------------
% 定义首页主标题的书签
\newcommand*{\dukangSetTitleRef}{%
  \hypertarget{dukangMainTitle}{}
  \bookmark[dest=dukangMainTitle, level=0, view=FitH]{\@firstname\@lastname}
}
%-------------------------------------------------------------------------------
% 以下计数器用于支持PDF书签标题开头的编号
\ifbool{dukangBookmarkLeadingNumber}{%
  \newcounter{dukangCounterLetterSection}
  \setcounter{dukangCounterLetterSection}{0}
}{}
%-------------------------------------------------------------------------------
% 重定义Awesome-CV的部分命令
%-------------------------------------------------------------------------------
% lettersection
\renewcommand{\lettersection}[1]{%
  \ifbool{dukangParIndent}{%
    % 首先重置缩进为0em，否则会影响其他部分的缩进设定
    \setlength{\parindent}{0em}
  }
  \par\addvspace{2.5ex}
  \phantomsection{}
  %
  % 手动生成书签标签
  %
  % 由于引入了中文环境，并且Awesome-CV的原始结构为CV-Resume-Cover分别独立呈现，
  % 在把所有部分合并成一个文件之后，需要做一些适应性调整，其中就包括原始文件不具备的
  % PDF书签设定部分。
  % 原始英文环境已经预备了hyperref和bookmark宏包，但是由于引入了ctex中文环境，
  % 直接调用bookmark生成书签会存在若干问题，各种尝试ctex[hyperref, UTF8]和
  % hyperref[unicode, CJKbookmarks]均不行，看来和宏包本身的环境有关。
  \ifbool{dukangBookmarkLeadingNumber}{%
    % 如果指定需要编号，则调用自定义计数器来进行手动编号
    % 对应的计数器在命令外定义
    \stepcounter{dukangCounterLetterSection}
    % 使用\arabic调用计数器，否则读出来的是数值，不是文档字符串输出
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangCounterLetterSection}}{\lettersectionstyle{#1}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangCounterLetterSection}, level=1, view=FitH]{\arabic{dukangCounterLetterSection}~~~~#1}%
  }{%
    % 如果不用编号，则使用随机数生成器直接对应标签和书签
    % 先调用一次lcg宏包的\rand命令，将生成的随机数保存在定义时的计数器中
    \rand
    % \hypertarget创建的是标签，后面指定的样式对应的是正文中输出的样式
    \hypertarget{\arabic{dukangRandom}}{\lettersectionstyle{#1}}
    % \bookmark创建的是对应标签的书签，后面指定的样式是PDF阅读器中书签目录中对应书签的样式
    \bookmark[dest=\arabic{dukangRandom}, level=1, view=FitH]{#1}
  }
  %
  % 手动生成书签标签结束
  %
  \color{sectiondivider}\vhrulefill{0.9pt}
  \par\nobreak\addvspace{0.4ex}
  \ifbool{dukangParIndent}{%
    % 设定首行缩进为2em
    \setlength{\parindent}{2em}
  }
  \lettertextstyle
}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 自定义命令
%
% 所有自定义命令的具体实现都放在该部分
% 自定义环境统一以dk开头，用于区分其他宏包的自定义命令
%-------------------------------------------------------------------------------
% dk
% 定义一个简短的命令用于显示完整名称
\newcommand{\dk}{\hyperref{https://williamyao.com}{}{}{\LaTeX{}~Dukang}}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 自定义环境
%
% 所有自定义环境的具体实现都放在该部分
% 自定义环境统一以dk开头，用于区分其他宏包的自定义环境
%-------------------------------------------------------------------------------
% dkbox
% inline风格的配色自适应的小盒子
%
% 用法：
%   \dkbox<[color]>{text}
%
% 说明：
%   color
%     小盒子的主色调，可选，如果为空，则自适应Awesome-CV的awesome颜色
%   text
%     需要显示的内容
%
% 例如：
%   \dkbox[Hello Dukang]
%   \dkbox[red]{Hello Dukang}
%-------------------------------------------------------------------------------
\newtcbox{\dkbox}[1][awesome]{%
  fontupper=\sffamily,
  on line,
  arc=0pt,
  outer arc=0pt,
  colframe=awesome,
  colback=awesome!5,
  boxsep=0pt,
  left=1pt,
  right=1pt,
  top=2pt,
  bottom=2pt,
  boxrule=0pt,
  bottomrule=1pt,
  toprule=1pt,
}
%-------------------------------------------------------------------------------
% dkboxr
% inline风格圆角描边的配色自适应的小盒子
%
% 用法：
%   \dkboxr<[color]>{text}
%
% 说明：
%   color
%     小盒子的主色调，可选，如果为空，则自适应Awesome-CV的awesome颜色
%   text
%     需要显示的内容
%
% 例如：
%   \dkboxr[Hello Dukang]
%   \dkboxr[red]{Hello Dukang}
%-------------------------------------------------------------------------------
\newtcbox{\dkboxr}[1][awesome]{%
  fontupper=\sffamily,
  on line,
  arc=7pt,
  colframe=awesome,
  colback=awesome!5,
  before upper={\rule[-3pt]{0pt}{10pt}},
  boxrule=1pt,
  boxsep=0pt,
  left=6pt,
  right=6pt,
  top=3pt,
  bottom=1pt,
}
%-------------------------------------------------------------------------------
% dkresource
% 引入外部pdf或图片的命令
%
% 用法：
%   \dkresource<[htbp!]>{file}{width_factor}{<caption>}
%
% 说明：
%   <htbp!>
%     控制图像浮动方式的可选参数，默认为htbp
%     h: 当前位置（代码所处的上下文）
%     t: Top（页面顶部）
%     b: Bottom（页面底部）
%     p: Page（单独成页）
%     !: 在决定位置时忽视限制
%     排版位置的选取与参数里符号的顺序无关，总是以h-t-b-p的优先级顺序决定浮动体位置
%     限制包括：
%       浮动体个数：
%         除单独成页外，默认每页不超过3个浮动体，其中顶部不超过2个，底部不超过1个
%       浮动体空间占页面的百分比：
%         默认顶部不超过70%，底部不超过30%
%   file
%     需要引入的文件，相对地址的起点为src根目录
%   width_factor
%     相对于整个页宽的占比，取值为0-1
%   caption
%     图形下方的说明，可为空，但不能省略
%
% 例如：
%   带说明，不可单独成页：
%     \dkresource[htb]{resource/r-1}{0.9}{这里是图形说明}
%   不带说明，使用默认参数（htbp），可单独成页：
%     \dkresource{resource/r-2}{1.0}{}
%-------------------------------------------------------------------------------
\newcommand{\dkresource}[4][htbp]{%
  \begin{figure}[#1]
    \centering
    \includegraphics[width=#3\textwidth]{#2}
    \ifthenelse{\isempty{#4}}{}{\caption{#4}}
    % \label{#5}
  \end{figure}
}
%-------------------------------------------------------------------------------
% dkcodeh
% 带有标题特效的代码高亮块，颜色基于Awesome-CV的配色进行自适应
% 名称中h的意思是heading
%
% 用法：
%   \begin{dkcodeh}{lang}{minted_style}{title}
%     ...
%   \end{dkcodeh}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%
% 例如：
%   \begin{dkcodeh}{python3}{tango}{代码示例}
%     import os
%     pass
%   \end{dkcodeh}
%-------------------------------------------------------------------------------
\newtcblisting{dkcodeh}[3]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  enhanced,
  title={#3},
  colframe=awesome,
  colback=awesome!5,
  colbacktitle=awesome!85,
  % fonttitle=\bfseries,
  coltitle=white,
  attach boxed title to top center={
    yshift=-0.25mm-\tcboxedtitleheight/2,
    yshifttext=2mm-\tcboxedtitleheight/2
  },
  boxed title style={
    enhanced,boxrule=0.5mm,
    frame code={
      \path[tcb fill frame]
      ([xshift=-4mm]frame.west)
      -- (frame.north west)
      -- (frame.north east)
      -- ([xshift=4mm]frame.east)
      -- (frame.south east)
      -- (frame.south west)
      -- cycle;
    },
    interior code={
      \path[tcb fill interior]
      ([xshift=-2mm]interior.west)
      -- (interior.north west)
      -- (interior.north east)
      -- ([xshift=2mm]interior.east)
      -- (interior.south east)
      -- (interior.south west)
      -- cycle;
    }
  },
  overlay={
    \begin{tcbclipinterior}
      \fill[awesome!20]
      (frame.south west)
      rectangle
      ([xshift=5mm]frame.north west);
    \end{tcbclipinterior}
  }
}
%-------------------------------------------------------------------------------
% dkcodefileh
% 带有标题特效的代码高亮块，颜色基于Awesome-CV的配色进行自适应
% 该命令从指定文件中读取内容进行高亮显示
%
% 用法：
%   \dkcodefileh{lang}{minted_style}{title}{file}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   file
%     代码块内容的来源文件，必须为内容可读的文本文件
%
% 例如：
%   \dkcodefileh{python3}{tango}{代码示例}{resource/code.py}
%-------------------------------------------------------------------------------
\newtcbinputlisting{dkcodefileh}[4]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  enhanced,
  title={#3},
  colframe=awesome,
  colback=awesome!5,
  colbacktitle=awesome!85,
  % fonttitle=\bfseries,
  coltitle=white,
  listing file={#4},
  attach boxed title to top center={
    yshift=-0.25mm-\tcboxedtitleheight/2,
    yshifttext=2mm-\tcboxedtitleheight/2
  },
  boxed title style={
    enhanced,boxrule=0.5mm,
    frame code={
      \path[tcb fill frame]
      ([xshift=-4mm]frame.west)
      -- (frame.north west)
      -- (frame.north east)
      -- ([xshift=4mm]frame.east)
      -- (frame.south east)
      -- (frame.south west)
      -- cycle;
    },
    interior code={
      \path[tcb fill interior]
      ([xshift=-2mm]interior.west)
      -- (interior.north west)
      -- (interior.north east)
      -- ([xshift=2mm]interior.east)
      -- (interior.south east)
      -- (interior.south west)
      -- cycle;
    }
  },
  overlay={
    \begin{tcbclipinterior}
      \fill[awesome!20]
      (frame.south west)
      rectangle
      ([xshift=5mm]frame.north west);
    \end{tcbclipinterior}
  }
}
%-------------------------------------------------------------------------------
% dkcode
% 可根据Awesome-CV主色调进行颜色自适应的代码高亮块
%
% 用法：
%   \begin{dkcode}{lang}{minted_style}{title}
%     ...
%   \end{dkcode}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%
% 例如：
%   \begin{dkcode}{python3}{tango}{代码示例}
%     ...
%   \end{dkcode}
%-------------------------------------------------------------------------------
\newtcblisting{dkcode}[3]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#3}{\faCode},
  colframe=awesome,
  colback=awesome!5,
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcodec
% 可指定框架主色的代码高亮块
%
% 用法：
%   \begin{dkcodec}{lang}{minted_style}{title}{frame_color}{bg_color}
%     ...
%   \end{dkcodec}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   frame_color
%     标题及边框的颜色
%   bg_color
%     代码部分的底色
%
% 例如：
%   \begin{dkcodec}{python3}{tango}{代码示例}{green!35!black}{green!5}
%     ...
%   \end{dkcodec}
%
% 推荐样式：
%   浅绿样式 {green!35!black}{green!5}
%   黑白样式 {black}{white}
%   黑灰样式 {black!75}{black!5}
%-------------------------------------------------------------------------------
\newtcblisting{dkcodec}[5]{
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#3}{\faCode},
  colframe=#4,
  colback=#5,
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcodefile
% 可根据Awesome-CV主色调进行颜色自适应的代码高亮块
% 该命令从指定文件中读取内容进行高亮显示
%
% 用法：
%   \dkcodefile{lang}{minted_style}{title}{file}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   file
%     代码块内容的来源文件，必须为内容可读的文本文件
%
% 例如：
%   \dkcodefile{python3}{tango}{代码示例}{resource/code.py}
%-------------------------------------------------------------------------------
\newtcbinputlisting{dkcodefile}[4]{
  before skip=18bp,
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#3}{\faCode},
  colframe=awesome,
  colback=awesome!5,
  listing file={#4},
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcodefilec
% 可指定框架主色的代码高亮块
% 该命令从指定文件中读取内容进行高亮显示
%
% 用法：
%   \dkcodefilec{lang}{minted_style}{title}{frame_color}{bg_color}{file}
%
% 说明：
%   lang
%     语言名称，例如bash, python3, java, c, go等
%   minted_style
%     minted预定义的高亮样式，可选项为：
%       algol, friendly, lovelace, pastie, tango, vs, autumn, fruity,
%       monokai, perldoc, trac, borland, igor, murphy, rrt, vim
%   title
%     代码块标题栏文字
%   frame_color
%     标题及边框的颜色
%   bg_color
%     代码部分的底色
%   file
%     代码块内容的来源文件，必须为内容可读的文本文件
%
% 例如：
%   \dkcodefilec{python3}{tango}{代码示例}{green!35!black}{green!5}{resource/code.py}
%
% 推荐样式：
%   浅绿样式 {green!35!black}{green!5}
%   黑白样式 {black}{white}
%   黑灰样式 {black!75}{black!5}
%-------------------------------------------------------------------------------
\newtcbinputlisting{dkcodefilec}[6]{
  before skip=18bp,
  breakable,
  drop shadow,
  listing engine=minted,
  minted language=#1,
  minted style=#2,
  minted options={
    breaklines,
    linenos,
    numbersep=3mm
  },
  listing only,
  left=6mm,
  right=6mm,
  enhanced,
  title=\TwoSymbolsAndText{\faCode}{#3}{\faCode},
  listing file={#6},
  colframe=#4,
  colback=#5,
  coltitle=white
  % fonttitle=\bfseries,
}
%-------------------------------------------------------------------------------
% dkcomment
% 可根据Awesome-CV主色调进行颜色自适应的备注框
%
% 用法：
%   \begin{dkcomment}{title}{\fontawesome_name}
%     ...
%   \end{dkcomment}
%
% 说明：
%   title
%     代码块标题栏文字
%   fontawesome_name
%     FontAwesome字体的代码或名称
%
% 例如：
%   \begin{dkcomment}{特别说明}{\faCheck}
%     ...
%   \end{dkcomment}
%-------------------------------------------------------------------------------
\newtcolorbox{dkcomment}[2]{
  before skip=18bp,
  drop shadow,
  size=title,
  top=3mm,
  bottom=3mm,
  left=6mm,
  right=6mm,
  arc=1.5mm,
  breakable,
  enhanced jigsaw,
  colframe=awesome,% 这里可以直接使用定义好的颜色名称
  coltitle=white,
  boxrule=0.5mm,
  colback=awesome!5,
  coltext=text,
  title=\TwoSymbolsAndText{#2}{#1}{#2}
}
%-------------------------------------------------------------------------------
% dkcommentc
% 可指定框架主色的备注框
%
% 用法：
%   \begin{dkcommentc}{title}{\fontawesome_name}{frame_color}{bg_color}
%     ...
%   \end{dkcommentc}
%
% 说明：
%   title
%     代码块标题栏文字
%   fontawesome_name
%     FontAwesome字体的代码或名称
%   frame_color
%     标题及边框的颜色
%   bg_color
%     代码部分的底色
%
% 例如：
%   \begin{dkcommentc}{特别说明}{\faCheck}{green!35!black}{green!5}
%     ...
%   \end{dkcommentc}
%
% 推荐样式：
%   浅绿样式 {green!35!black}{green!5}
%   黑白样式 {black}{white}
%   黑灰样式 {black!75}{black!5}
%-------------------------------------------------------------------------------
\newtcolorbox{dkcommentc}[4]{
  before skip=18bp,
  drop shadow,
  size=title,
  top=3mm,
  bottom=3mm,
  left=6mm,
  right=6mm,
  arc=1.5mm,
  breakable,
  enhanced jigsaw,
  colframe=#3,
  coltitle=white,
  boxrule=0.5mm,
  colback=#4,
  coltext=text,
  title=\TwoSymbolsAndText{#2}{#1}{#2}
}
%-------------------------------------------------------------------------------


%-------------------------------------------------------------------------------
% 定义结束
%-------------------------------------------------------------------------------
